<template lang="html">
  <div class="select-car">
    <div class="select-header">
      <tab :line-width=3 active-color='#ea5441' v-model="index">
        <tab-item class="vux-center" :selected="itemTitle === index" v-for="(item, index) in list" @on-item-click="onItemClick(index)" :key="index">{{item}}</tab-item>
      </tab>
    </div>
    <search
      @result-click="resultClick"
      @on-change="getResult"
      :results="results"
      v-model="value"
      :autoFixed="false"
      @on-focus="onFocus"
      @on-cancel="onCancel"
      ref="search"></search>
    <section class="sel-condition">
      <div class="ct-item" @click="selCarBrand">品牌</div>
      <div class="ct-item">价格</div>
      <div class="ct-item">筛选</div>
      <div class="ct-item">排序</div>
    </section>
    <section class="condition">
      <div class="condition-ct">
        <div class="con-cell-item">
          <span class="con-name">日产</span>
          <span class="con-icon"></span>
        </div>
        <div class="con-cell-item">
          <span class="con-name">LANNIA 蓝鸟</span>
          <span class="con-icon"></span>
        </div>
      </div>
    </section>
    <section class="content">
      <carlist :carType="index"></carlist>
    </section>
    <section v-if="carBrand">
      <carbrand></carbrand>
    </section>
  </div>
</template>
<script type="text/ecmascript-6">
  import { Tab, TabItem, Search } from 'vux'
  import carlist from '../CarList/CarList'
  import carbrand from '../CarBrand/CarBrand'
  const list = () => ['二手车', '新车', '平行进口车']
  export default{
    data() {
      return {
        index: this.$store.state.carType,
        list: list(),
        itemTitle: this.$store.state.carType,
        results: [],
        value: '',
        carBrand: false
      }
    },
    created() {
    },
    watch: {
      index: function(val) {
        console.log(`index is ===${val}`)
      }
    },
    methods: {
      selCarBrand() {
        this.carBrand = true
      },
      onItemClick(index) {
        console.log('on item click:', index)
        this.$store.commit('CAR_TYPE', {carType: index})
      },
      setFocus() {
        this.$refs.search.setFocus()
      },
      resultClick(item) {
        window.alert('you click the result item: ' + JSON.stringify(item))
      },
      getResult(val) {
        if (val.length) {
          console.log(`getResult === ${val}`)
        }
      },
      onFocus() {
        console.log('on focus')
      },
      onCancel() {
        console.log('on cancel')
      }
    },
    components: {
      Tab,
      TabItem,
      Search,
      carlist,
      carbrand
    }
  }
</script>
<style lang="less" rel="stylesheet/less" scope>
  @import '~vux/src/styles/1px.less';
  @import '~vux/src/styles/center.less';
  @import url('../../common/less/index.less');
  .active-6-1 {
    color: #ea5441 !important;
    border-color: #ea5441 !important;
  }
  .sel-condition{
    display: flex;
    padding: 10px 0;
    .border-1px();
    .ct-item{
      flex: 1;
      text-align: center;
      border-right: 1px solid #D9D9D9;
      font-size: 12px;
      &:last-child{
         border-right: 1px solid;
         border-right-color: transparent;
       }
     &:after{
        display: inline-block;
        content: "\25BC";
        color: #333333;
        font-size: 8px;
      }
    }
  }
  .condition{
    overflow: hidden;
    .border-1px();
  }
  .condition-ct{
    margin: 3px 10px 5px;
    .con-cell-item{
      display: inline-block;
      background: #f5f5f5;
      border-radius: 3px;
      padding: 2px 5px;
      margin: 2px;
      line-heigth: 16px;
      font-size: 11px;
      .con-name{
        display: inline-block;
        margin-right: 5px;
      }
      .con-icon{
        vertical-align: middle;
        display: inline-block;
        width: 12px;
        height: 12px;
        background-image: url("./close.png");
        background-size: contain;
      }
    }
  }

</style>
